# Read the CSV file
df <- read.csv("202209-divvy-publictripdata.csv", na.strings = c("", "NA"))
# Remove rows with at least one empty cell
df <- df[complete.cases(df), ]
# Write the modified dataframe to a new CSV file
write.csv(df, file = "BikeTrips2022-09.csv", row.names = FALSE)
#I have run this code 12 times to remove all the rows with one empty cell.

#Installing packages
install.packages("dplyr")
install.packages("tidyverse")
install.packages("lubridate")
install.packages("ggplot2")
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggplot2)

#Uploading data that has zero empty values
biketrips202201 <- read_csv("BikeTrips2022-01.csv")
biketrips202202 <- read_csv("BikeTrips2022-02.csv")
biketrips202203 <- read_csv("BikeTrips2022-03.csv")
biketrips202204 <- read_csv("BikeTrips2022-04.csv")
biketrips202205 <- read_csv("BikeTrips2022-05.csv")
biketrips202206 <- read_csv("BikeTrips2022-06.csv")
biketrips202207 <- read_csv("BikeTrips2022-07.csv")
biketrips202208 <- read_csv("BikeTrips2022-08.csv")
biketrips202209 <- read_csv("BikeTrips2022-09.csv")
biketrips202210 <- read_csv("BikeTrips2022-10.csv")
biketrips202211 <- read_csv("BikeTrips2022-11.csv")
biketrips202212 <- read_csv("BikeTrips2022-12.csv")

#Renaming names so it is more understandable
biketrips202201 <- rename(biketrips202201
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202202 <- rename(biketrips202202
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202203 <- rename(biketrips202203
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202204 <- rename(biketrips202204
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202205 <- rename(biketrips202205
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202206 <- rename(biketrips202206
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202207 <- rename(biketrips202207
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202208 <- rename(biketrips202208
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202209 <- rename(biketrips202209
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202210 <- rename(biketrips202210
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202211 <- rename(biketrips202211
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)
biketrips202212 <- rename(biketrips202212
                          ,trip_id = ride_id
                          ,bikeid = rideable_type
                          ,start_time = started_at   
                          ,end_time = ended_at
                          ,from_station_name = start_station_name
                          ,from_station_id = start_station_id
                          ,to_station_name = end_station_name
                          ,to_station_id = end_station_id
                          ,usertype = member_casual)

# Convert ride_id and bikeid to character so that they can stack correctly
biketrips202212 <-  mutate(biketrips202212, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid)) 
biketrips202211 <-  mutate(biketrips202211, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202210 <-  mutate(biketrips202210, trip_id = as.character(trip_id)
                   ,bikeid = as.character(bikeid)) 
biketrips202209 <-  mutate(biketrips202209, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202208 <-  mutate(biketrips202208, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202207 <-  mutate(biketrips202207, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202206 <-  mutate(biketrips202206, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202205 <-  mutate(biketrips202205, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202204 <-  mutate(biketrips202204, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202203 <-  mutate(biketrips202203, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202202 <-  mutate(biketrips202202, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))
biketrips202201 <-  mutate(biketrips202201, trip_id = as.character(trip_id)
                           ,bikeid = as.character(bikeid))

## Stack monthly data frames into one big data frame
all_trips <- bind_rows(biketrips202201,biketrips202202,biketrips202203,biketrips202204
                       ,biketrips202205,biketrips202206,biketrips202207,biketrips202208
                       ,biketrips202209,biketrips202210,biketrips202211,biketrips202212)

# Add columns that list the date, month, day, and year and day_of_week of each ride
all_trips$date <- as.Date(all_trips$start_time)
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")

# Add a "ride_length" calculation to all_trips (in seconds)
all_trips$ride_length <- difftime(all_trips$end_time,all_trips$start_time)  

# Convert "ride_length" from Factor to numeric so we can run calculations on the data
is.factor(all_trips$ride_length)
all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))
is.numeric(all_trips$ride_length)

#Removing bad data,removing station name that was used for testing or ride_length was negative
all_trips_v2 <- all_trips[!(all_trips$from_station_name == "HQ QR" | all_trips$ride_length<0),]

#Arranging data is sorted by ride_length
all_trips_v2 <- all_trips_v2 %>% 
  arrange(ride_length)

mean(all_trips_v2$ride_length) #straight average (total ride length / rides)
median(all_trips_v2$ride_length) #midpoint number in the ascending array of ride lengths
max(all_trips_v2$ride_length) #longest ride
min(all_trips_v2$ride_length) #shortest ride

# Compare members and casual users
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype, FUN = mean)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype, FUN = median)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype, FUN = max)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype, FUN = min)

#Average ride time by each day for members vs casual users
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype + all_trips_v2$day_of_week, FUN = mean)

# Ordering days of the week
all_trips_v2$day_of_week <- ordered(all_trips_v2$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))

#Average ride time by each day for members vs casual users
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype + all_trips_v2$day_of_week, FUN = mean)

all_trips_v2 %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>%  #creates weekday field using wday()
  group_by(usertype, weekday) %>%  #groups by usertype and weekday
  summarise(number_of_rides = n()							#calculates the number of rides and average duration 
            ,average_duration = mean(ride_length)) %>% 		# calculates the average duration
  arrange(usertype, weekday)					# sorts

#Visualize number of rides by rider type
all_trips_v2 %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>% 
  group_by(usertype, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(usertype, weekday)  %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = usertype)) +
  geom_col(position = "dodge")

# Visualization for average duration
all_trips_v2 %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>% 
  group_by(usertype, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(usertype, weekday)  %>% 
  ggplot(aes(x = weekday, y = average_duration, fill = usertype)) +
  geom_col(position = "dodge")

#Creating a CSV file with avg_ride_lenght by usertype for all the days in week
counts <- aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype + all_trips_v2$day_of_week, FUN = mean)
write.csv(counts, file = 'avg_ride_length.csv')

#Visualization for all days in a week by different usertype differentitated by avgerage ride_length
ggplot(all_trips_v2, aes(x = day_of_week, y = ride_length, fill = usertype)) +
  geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
  xlab("Day of Week") +
  ylab("Average Ride Length (seconds)") +
  ggtitle("Average Ride Length by User Type and Day of Week")
